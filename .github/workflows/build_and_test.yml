# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: Build and Test

on:
  push:
    paths-ignore:
      - '**.md'
      - 'SignNow.Net/SignNow.Net.Examples/**'

  pull_request:
    branches:
      - 'master'
      - 'develop'

# Workflow
jobs:
  build:

    name: ${{ matrix.osname }} ${{ matrix.framework }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        dotnet:
          - '3.1.x'

        framework:
          - 'netcoreapp3.0'
          - 'netcoreapp3.1'
          - 'net45'

        name:
          - ubuntu-18.04
          - macOS-latest
          - windows-latest

        include:
          - name: ubuntu-18.04
            os: ubuntu-18.04
            osname: Linux

          - name: macOS-latest
            os: macOS-latest
            osname: macOS

          - name: windows-latest
            os: windows-latest
            osname: Windows

        exclude:
          - name: ubuntu-18.04
            framework: 'net45'

          - name: macOS-latest
            framework: 'net45'

    env:
      COREHOST_TRACE: false
      # Disable sending usage data to Microsoft
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      # prevent the caching of the packages on the build machine
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      # removes logo and telemetry message from first run of dotnet cli
      DOTNET_NOLOGO: true
      # prevent the download of the XML documentation for the packages
      NUGET_XMLDOC_MODE: skip
      COVERAGE_PATH: SignNow.Net.Test/bin/Debug
      CODACY_COVERAGE_REPORTER_URL: https://github.com/codacy/codacy-coverage-reporter/releases/download/7.8.1/codacy-coverage-reporter-assembly-7.8.1.jar

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup .Net ${{ matrix.dotnet }}
        if: (runner.os == 'macOS' || runner.os == 'Linux')
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Setup nuget cache
        uses: actions/cache@v2
        id: nuget-cache
        with:
          path: ~/.nuget
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/SignNow*/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Setup dotnet tool
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        run: |
          dotnet tool install --global InheritDocTool
          dotnet tool install --global coverlet.console
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore Nuget packages
        run: dotnet restore -v:n

      - name: Configure SignNow account
        run: |
          mkdir $HOME/Pass
          echo '${{ secrets.TEST_CREDITS_JSON }}' >> $HOME/Pass/api-eval.signnow.com.json
          echo '${{ secrets.TEST_ACCOUNT_JSON }}' >> $HOME/Pass/app-eval.signnow.com.json

      - name: Build for .Net Standard 1.2
        if: matrix.framework == 'netcoreapp3.0'
        shell: pwsh
        run: dotnet build SignNow.Net --configuration Debug --framework netstandard1.2

      - name: Build for .Net Standard 2.0
        if: matrix.framework == 'netcoreapp3.1'
        shell: pwsh
        run: dotnet build SignNow.Net --configuration Debug --framework netstandard2.0

      - name: Build for .Net 4.5
        if: (runner.os == 'Windows' && matrix.framework == 'net45')
        shell: pwsh
        run: dotnet build SignNow.Net --configuration Debug --framework net45

      - name: Run Tests on ${{ matrix.framework }}
        shell: pwsh
        run: |
          dotnet test SignNow.Net.Test `
            --configuration Debug --framework ${{ matrix.framework }} `
            /p:CollectCoverage=true

      - name: Save Code Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: CoverageReports.zip
          path: SignNow.Net.Test/bin/Debug/**/coverage*

      - name: Upload Code Coverage Report (Codacy)
        if: github.ref == 'refs/heads/develop'
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        shell: pwsh
        run: |
          curl -LS -o codacy-coverage-reporter-assembly.jar ${{ env.CODACY_COVERAGE_REPORTER_URL }}
          java -jar codacy-coverage-reporter-assembly.jar report `
            -t ${{ secrets.CODACY_PROJECT_TOKEN }} `
            -l csharp --force-language --commit-uuid ${{ github.sha }} `
            -r ${{ env.COVERAGE_PATH }}/${{ matrix.framework }}/coverage.${{ matrix.framework }}.opencover.xml

      - name: Setup Code Coverage report flags
        shell: pwsh
        run: |
          If ("${{ matrix.framework }}" -eq "netcoreapp3.0") {
            echo "name=TARGET_FRAMEWORK::netstandard12" >> $GITHUB_ENV
          } ElseIf ("${{ matrix.framework }}" -eq "netcoreapp3.1") {
            echo "name=TARGET_FRAMEWORK::netstandard20" >> $GITHUB_ENV
          } Else {
            echo "name=TARGET_FRAMEWORK::net45" >> $GITHUB_ENV
          }

      - name: Upload Code Coverage Report (Codecov.io)
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          name: ${{ runner.os }}-codecov-${{ matrix.framework }}
          flags: ${{ runner.os }},${{ env.TARGET_FRAMEWORK }}
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ env.COVERAGE_PATH }}/${{ matrix.framework }}/coverage.${{ matrix.framework }}.opencover.xml
          fail_ci_if_error: false
