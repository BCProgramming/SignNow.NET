name: Build and Test

on: [push, pull_request]

# Workflows
jobs:
  unix_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-18.04'
          - 'macOS-latest'
        dotnet:
          - '2.2.402'
        target:
          - 'netcoreapp2.2'
    env:
      COREHOST_TRACE: false
      # Disable sending usage data to Microsoft
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      # prevent the caching of the packages on the build machine
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      # prevent the download of the XML documentation for the packages
      NUGET_XMLDOC_MODE: skip

    name: ${{ matrix.os }} | ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v1

      - name: Setup .Net Core ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Setup .Net Tools
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        run: |
          dotnet tool install -g InheritDocTool
          echo "::add-path::$HOME/.dotnet/tools"
          # echo ::set-env name=PATH::/home/runner/.dotnet/tools/:$PATH

      - name: Restore Nuget packages
        run: dotnet restore -s https://api.nuget.org/v3/index.json

      - name: Configure SignNow account
        run: |
          mkdir $HOME/Pass
          echo '${{ secrets.TEST_CREDITS_JSON }}' >> $HOME/Pass/api-eval.signnow.com.json
          echo '${{ secrets.TEST_ACCOUNT_JSON }}' >> $HOME/Pass/app-eval.signnow.com.json

      - name: Build SignNow.Net.Test
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        run: |
          dotnet build \
          --framework=${{ matrix.target }} \
          ./SignNow.Net.Test/SignNow.Net.Test.csproj

      - name: Run SignNow.Net.Test
        env:
          DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
        run: |
          dotnet test \
          --no-build \
          --framework=${{ matrix.target }} \
          ./SignNow.Net.Test/SignNow.Net.Test.csproj


  # old build matrix
  # linux_tests:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os:
  #         - 'macOS-latest'
  #         # - 'ubuntu-18.04'
  #         # - 'windows-2019'
  #       dotnet:
  #         - 2.2.402
  #         # - 3.0.100
  #       target:
  #         - 'netcoreapp2.2'
  #         - 'netstandard1.2'
  #         - 'netstandard2.0'
  #         - 'net45'
  #   env:
  #     COREHOST_TRACE: false
  #     # Disable sending usage data to Microsoft
  #     DOTNET_CLI_TELEMETRY_OPTOUT: 1
  #     # prevent the caching of the packages on the build machine
  #     DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  #     # prevent the download of the XML documentation for the packages
  #     NUGET_XMLDOC_MODE: skip

  #   name: ${{ matrix.os }} | ${{ matrix.target }}
  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Setup .Net Core ${{ matrix.dotnet }}
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: ${{ matrix.dotnet }}
  #       if: (matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest')

  #     - name: Setup .Net Tools
  #       env:
  #         DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
  #       run: |
  #         dotnet tool install -g InheritDocTool
  #         echo "::add-path::$HOME/.dotnet/tools"
  #         # echo ::set-env name=PATH::/home/runner/.dotnet/tools/:$PATH

  #     - name: Restore Nuget packages
  #       run: dotnet restore -s https://api.nuget.org/v3/index.json

  #     - name: Configure SignNow account
  #       run: |
  #         mkdir $HOME/Pass
  #         echo '${{ secrets.TEST_CREDITS_JSON }}' >> $HOME/Pass/api-eval.signnow.com.json
  #         echo '${{ secrets.TEST_ACCOUNT_JSON }}' >> $HOME/Pass/app-eval.signnow.com.json

  #     - name: Build SignNow.Net.Test
  #       env:
  #         DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
  #       run: |
  #         dotnet build \
  #         --framework=${{ matrix.target }} \
  #         ./SignNow.Net.Test/SignNow.Net.Test.csproj
  #       if: (startsWith(matrix.target, 'netcoreapp') && matrix.os != 'windows-latest')

  #     - name: Run SignNow.Net.Test
  #       env:
  #         DOTNET_ROOT: ${{ runner.tool_cache }}/dncs/${{ matrix.dotnet }}/x64
  #       run: |
  #         dotnet test \
  #         --no-build \
  #         --framework=${{ matrix.target }} \
  #         ./SignNow.Net.Test/SignNow.Net.Test.csproj
  #       if: (startsWith(matrix.target, 'netcoreapp') && matrix.os != 'windows-latest')
